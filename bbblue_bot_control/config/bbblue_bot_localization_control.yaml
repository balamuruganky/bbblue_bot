# Publish all joint states -----------------------------------
# Creates the /joint_states topic necessary in ROS
joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50  

# Effort Controllers ---------------------------------------
leftWheel_effort_controller:
  type: effort_controllers/JointEffortController
  joint: left_wheel_hinge
  pid: {p: 100.0, i: 0.1, d: 10.0}

rightWheel_effort_controller:
  type: effort_controllers/JointEffortController
  joint: right_wheel_hinge
  pid: {p: 100.0, i: 0.1, d: 10.0}

bbblue_bot_controller:
  type        : "diff_drive_controller/DiffDriveController"
  left_wheel  : 'left_wheel_hinge'
  right_wheel : 'right_wheel_hinge'
  publish_rate: 50
  pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
  cmd_vel_timeout: 0.25

  # Base frame_id
  base_frame_id: base_link

  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: false

  # Husky hardware provides wheel velocities
  estimate_velocity_from_position: false

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.875 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 1.0   # 1.0  m/s
      has_acceleration_limits: true
      max_acceleration       : 3.0   # 3.0 m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 0.5   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 6.0   # rad/s^2