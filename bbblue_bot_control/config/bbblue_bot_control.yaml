# Publish all joint states -----------------------------------
# Creates the /joint_states topic necessary in ROS
joint_state_controller:
    type: joint_state_controller/JointStateController
    publish_rate: 50 

# Effort Controllers ---------------------------------------
leftWheel_effort_controller:
  type: effort_controllers/JointEffortController
  joint: left_wheel_hinge
  pid: {p: 100.0, i: 0.1, d: 10.0}
  #pid: {p: 50.0, i: 0.1, d: 0.0}
rightWheel_effort_controller:
  type: effort_controllers/JointEffortController
  joint: right_wheel_hinge
  pid: {p: 100.0, i: 0.1, d: 10.0}
  #pid: {p: 50.0, i: 0.1, d: 0.0} 

bbblue_bot_controller:
  type        : "diff_drive_controller/DiffDriveController"
  left_wheel  : 'left_wheel_hinge'
  right_wheel : 'right_wheel_hinge'
  publish_rate: 100.0  # default: 50
  pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
  twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

  # Wheel separation and diameter. These are both optional.
  # diff_drive_controller will attempt to read either one or both from the
  # URDF if not specified as a parameter
  wheel_separation : 0.146 # meters 
  wheel_radius : 0.0315    # meters

  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 1.0 # default: 1.0
  wheel_radius_multiplier    : 1.0 # default: 1.0

  # Velocity commands timeout [s], default 0.5
  cmd_vel_timeout: 0.25

  # Base frame_id
  base_frame_id: base_link #default: base_link

  #preserve_turning_radius: true

  # Husky hardware provides wheel velocities
  estimate_velocity_from_position: false

  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 50.0 #1.0  # m/s
      min_velocity           : -5.0 #-0.5 # m/s
      has_acceleration_limits: true
      max_acceleration       : 5.0 #0.8  # m/s^2
      min_acceleration       : -1.0 #-0.4 # m/s^2
      has_jerk_limits        : true
      max_jerk               : 5.0  # m/s^3
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 50.0 #1.7  # rad/s
      has_acceleration_limits: true
      max_acceleration       : 1.5  # rad/s^2
      has_jerk_limits        : true
      max_jerk               : 2.5  # rad/s^3

  #Publish to TF directly or not
  #enable_odom_tf: true

  #Name of frame to publish odometry in
  #odom_frame_id: odom

  # Publish the velocity command to be executed. 
  # It is to monitor the effect of limiters on the controller input.
  #publish_cmd: true
